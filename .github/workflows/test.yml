# Action Test
#
# References:
#
# - https://docs.github.com/actions/using-workflows/events-that-trigger-workflows#pull_request
# - https://docs.github.com/actions/using-workflows/events-that-trigger-workflows#push
# - https://docs.github.com/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
# - https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request
# - https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads#push
# - https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_dispatch
# - https://github.com/actions/checkout
# - https://github.com/hmarr/debug-action

---
name: test
on:
  pull_request:
  push:
    paths:
      - .github/workflows/test.yml
      - action.yml
  workflow_dispatch:
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - id: debug
        name: Print environment variables and event payload
        uses: hmarr/debug-action@v3.0.0
      - id: checkout
        name: Checkout ${{ github.head_ref || github.ref_name }}
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false
          ref: ${{ github.head_ref || github.ref }}
      - id: test1
        name: Test 1
        uses: ./
        with:
          data: package.json
          filter: .version
      - id: test2
        name: Test 2
        uses: ./
        with:
          data: grease.config.json
          filter: .tag.sign
      - id: test3
        name: Test 3
        uses: ./
        with:
          data: .dprint.jsonc
          filter: .exec.commands[1].command
      - id: test4
        name: Test 4
        uses: ./
        with:
          data: <<<$(echo [])
          filter: .
      - id: test5
        name: Test 5
        uses: ./
        with:
          data: |
            <<<$(echo '{ "zero": 0 }')
          filter: .zero
      - id: outputs
        name: Outputs
        run: |
          echo outputs
          echo steps.test1.outputs.result: ${{ steps.test1.outputs.result }}
          echo steps.test2.outputs.result: ${{ steps.test2.outputs.result }}
          echo steps.test3.outputs.result: ${{ steps.test3.outputs.result }}
          echo steps.test4.outputs.result: ${{ steps.test4.outputs.result }}
          echo steps.test5.outputs.result: ${{ steps.test5.outputs.result }}
